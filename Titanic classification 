{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0fYcf_Ky-r-6",
        "outputId": "5c70d43c-10ad-4c90-b8bd-e62db9796e32"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "\n",
        "# List files in 'My Drive' root directory\n",
        "print(os.listdir('/content/drive/My Drive'))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e0pDPLziDfYQ",
        "outputId": "384917e6-2d65-4497-b4a7-d651d0bc7ad6"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Colab Notebooks', 'portfolio_data.csv', 'Titanic-Dataset.csv']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler, LabelEncoder\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
        "\n",
        "# Load the Titanic dataset\n",
        "# Note: If you're using Google Colab, make sure the file path is correct or upload it to Colab\n",
        "data_path = \"/content/titanic-Dataset.csv\"  # Adjust the path if needed\n",
        "df = pd.read_csv(data_path)\n",
        "\n",
        "# Display the first few rows of the dataset\n",
        "print(\"First 5 rows of the dataset:\")\n",
        "print(df.head())\n",
        "\n",
        "# Display information about the dataset\n",
        "print(\"\\nDataset Information:\")\n",
        "print(df.info())\n",
        "\n",
        "# Check for missing values\n",
        "print(\"\\nMissing values in each column:\")\n",
        "print(df.isnull().sum())\n",
        "\n",
        "# Exploratory Data Analysis (EDA)\n",
        "# Distribution of target variable 'Survived'\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.countplot(data=df, x='Survived')\n",
        "plt.title('Survival Count')\n",
        "plt.show()\n",
        "\n",
        "# Gender distribution in survival\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.countplot(data=df, x='Survived', hue='Sex')\n",
        "plt.title('Survival Count by Gender')\n",
        "plt.show()\n",
        "\n",
        "# Age distribution\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.histplot(data=df, x='Age', bins=30, kde=True)\n",
        "plt.title('Age Distribution')\n",
        "plt.show()\n",
        "\n",
        "# Correlation heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt='.2f')\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()\n",
        "\n",
        "# Data Preprocessing\n",
        "# Fill missing values in 'Age' with the median age\n",
        "df['Age'].fillna(df['Age'].median(), inplace=True)\n",
        "\n",
        "# Fill missing values in 'Embarked' with the most common port\n",
        "df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)\n",
        "\n",
        "# Drop the 'Cabin' column due to too many missing values\n",
        "df.drop(columns=['Cabin'], inplace=True)\n",
        "\n",
        "# Convert categorical variables to numerical values\n",
        "df['Sex'] = LabelEncoder().fit_transform(df['Sex'])\n",
        "df['Embarked'] = LabelEncoder().fit_transform(df['Embarked'])\n",
        "\n",
        "# Drop irrelevant columns\n",
        "df.drop(columns=['Name', 'Ticket', 'PassengerId'], inplace=True)\n",
        "\n",
        "# Define features and target variable\n",
        "X = df.drop('Survived', axis=1)\n",
        "y = df['Survived']\n",
        "\n",
        "# Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Feature Scaling\n",
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n",
        "\n",
        "# Build and train a Random Forest Classifier\n",
        "model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions and evaluate the model\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Evaluation metrics\n",
        "print(\"\\nModel Accuracy:\", accuracy_score(y_test, y_pred))\n",
        "print(\"\\nClassification Report:\")\n",
        "print(classification_report(y_test, y_pred))\n",
        "\n",
        "# Confusion matrix\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues', cbar=False)\n",
        "plt.title('Confusion Matrix')\n",
        "plt.xlabel('Predicted')\n",
        "plt.ylabel('Actual')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 356
        },
        "id": "1NS9xNuOD171",
        "outputId": "4e300b3b-1ee0-4b2a-9cb6-094266868f43"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "error",
          "ename": "FileNotFoundError",
          "evalue": "[Errno 2] No such file or directory: '/content/titanic-Dataset.csv'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-3-a0639a3a2058>\u001b[0m in \u001b[0;36m<cell line: 14>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# Note: If you're using Google Colab, make sure the file path is correct or upload it to Colab\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0mdata_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"/content/titanic-Dataset.csv\"\u001b[0m  \u001b[0;31m# Adjust the path if needed\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;31m# Display the first few rows of the dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1619\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1620\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1622\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1879\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1880\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1881\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1882\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    874\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/titanic-Dataset.csv'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler, LabelEncoder\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
        "\n",
        "# Load the Titanic dataset\n",
        "# Note: If you're using Google Colab, make sure the file path is correct or upload it to Colab\n",
        "data_path = \"/content/Titanic-Dataset.csv\"  # Adjust the path if needed\n",
        "df = pd.read_csv(data_path)\n",
        "\n",
        "# Display the first few rows of the dataset\n",
        "print(\"First 5 rows of the dataset:\")\n",
        "print(df.head())\n",
        "\n",
        "# Display information about the dataset\n",
        "print(\"\\nDataset Information:\")\n",
        "print(df.info())\n",
        "\n",
        "# Check for missing values\n",
        "print(\"\\nMissing values in each column:\")\n",
        "print(df.isnull().sum())\n",
        "\n",
        "# Exploratory Data Analysis (EDA)\n",
        "# Distribution of target variable 'Survived'\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.countplot(data=df, x='Survived')\n",
        "plt.title('Survival Count')\n",
        "plt.show()\n",
        "\n",
        "# Gender distribution in survival\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.countplot(data=df, x='Survived', hue='Sex')\n",
        "plt.title('Survival Count by Gender')\n",
        "plt.show()\n",
        "\n",
        "# Age distribution\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.histplot(data=df, x='Age', bins=30, kde=True)\n",
        "plt.title('Age Distribution')\n",
        "plt.show()\n",
        "\n",
        "# Correlation heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt='.2f')\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()\n",
        "\n",
        "# Data Preprocessing\n",
        "# Fill missing values in 'Age' with the median age\n",
        "df['Age'].fillna(df['Age'].median(), inplace=True)\n",
        "\n",
        "# Fill missing values in 'Embarked' with the most common port\n",
        "df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)\n",
        "\n",
        "# Drop the 'Cabin' column due to too many missing values\n",
        "df.drop(columns=['Cabin'], inplace=True)\n",
        "\n",
        "# Convert categorical variables to numerical values\n",
        "df['Sex'] = LabelEncoder().fit_transform(df['Sex'])\n",
        "df['Embarked'] = LabelEncoder().fit_transform(df['Embarked'])\n",
        "\n",
        "# Drop irrelevant columns\n",
        "df.drop(columns=['Name', 'Ticket', 'PassengerId'], inplace=True)\n",
        "\n",
        "# Define features and target variable\n",
        "X = df.drop('Survived', axis=1)\n",
        "y = df['Survived']\n",
        "\n",
        "# Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Feature Scaling\n",
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n",
        "\n",
        "# Build and train a Random Forest Classifier\n",
        "model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions and evaluate the model\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Evaluation metrics\n",
        "print(\"\\nModel Accuracy:\", accuracy_score(y_test, y_pred))\n",
        "print(\"\\nClassification Report:\")\n",
        "print(classification_report(y_test, y_pred))\n",
        "\n",
        "# Confusion matrix\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues', cbar=False)\n",
        "plt.title('Confusion Matrix')\n",
        "plt.xlabel('Predicted')\n",
        "plt.ylabel('Actual')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 356
        },
        "id": "MLohg_I_EIcX",
        "outputId": "383447f2-e78f-455e-874b-7f18a57abfe1"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "error",
          "ename": "FileNotFoundError",
          "evalue": "[Errno 2] No such file or directory: '/content/Titanic-Dataset.csv'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-4-9db730b1c878>\u001b[0m in \u001b[0;36m<cell line: 14>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# Note: If you're using Google Colab, make sure the file path is correct or upload it to Colab\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0mdata_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"/content/Titanic-Dataset.csv\"\u001b[0m  \u001b[0;31m# Adjust the path if needed\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;31m# Display the first few rows of the dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1619\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1620\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1622\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1879\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1880\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1881\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1882\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    874\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/Titanic-Dataset.csv'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_path = '/content/drive/MyDrive/Titanic-Dataset.csv'\n",
        "df = pd.read_csv(data_path)\n"
      ],
      "metadata": {
        "id": "lHGupBEpEroz"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler, LabelEncoder\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
        "\n",
        "# Load the Titanic dataset\n",
        "# Note: If you're using Google Colab, make sure the file path is correct or upload it to Colab\n",
        "data_path = \"/content/Titanic-Dataset.csv\"  # Adjust the path if needed\n",
        "df = pd.read_csv('/content/drive/MyDrive/Titanic-Dataset.csv')\n",
        "\n",
        "# Display the first few rows of the dataset\n",
        "print(\"First 5 rows of the dataset:\")\n",
        "print(df.head())\n",
        "\n",
        "# Display information about the dataset\n",
        "print(\"\\nDataset Information:\")\n",
        "print(df.info())\n",
        "\n",
        "# Check for missing values\n",
        "print(\"\\nMissing values in each column:\")\n",
        "print(df.isnull().sum())\n",
        "\n",
        "# Exploratory Data Analysis (EDA)\n",
        "# Distribution of target variable 'Survived'\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.countplot(data=df, x='Survived')\n",
        "plt.title('Survival Count')\n",
        "plt.show()\n",
        "\n",
        "# Gender distribution in survival\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.countplot(data=df, x='Survived', hue='Sex')\n",
        "plt.title('Survival Count by Gender')\n",
        "plt.show()\n",
        "\n",
        "# Age distribution\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.histplot(data=df, x='Age', bins=30, kde=True)\n",
        "plt.title('Age Distribution')\n",
        "plt.show()\n",
        "\n",
        "# Correlation heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt='.2f')\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()\n",
        "\n",
        "# Data Preprocessing\n",
        "# Fill missing values in 'Age' with the median age\n",
        "df['Age'].fillna(df['Age'].median(), inplace=True)\n",
        "\n",
        "# Fill missing values in 'Embarked' with the most common port\n",
        "df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)\n",
        "\n",
        "# Drop the 'Cabin' column due to too many missing values\n",
        "df.drop(columns=['Cabin'], inplace=True)\n",
        "\n",
        "# Convert categorical variables to numerical values\n",
        "df['Sex'] = LabelEncoder().fit_transform(df['Sex'])\n",
        "df['Embarked'] = LabelEncoder().fit_transform(df['Embarked'])\n",
        "\n",
        "# Drop irrelevant columns\n",
        "df.drop(columns=['Name', 'Ticket', 'PassengerId'], inplace=True)\n",
        "\n",
        "# Define features and target variable\n",
        "X = df.drop('Survived', axis=1)\n",
        "y = df['Survived']\n",
        "\n",
        "# Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Feature Scaling\n",
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n",
        "\n",
        "# Build and train a Random Forest Classifier\n",
        "model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions and evaluate the model\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Evaluation metrics\n",
        "print(\"\\nModel Accuracy:\", accuracy_score(y_test, y_pred))\n",
        "print(\"\\nClassification Report:\")\n",
        "print(classification_report(y_test, y_pred))\n",
        "\n",
        "# Confusion matrix\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues', cbar=False)\n",
        "plt.title('Confusion Matrix')\n",
        "plt.xlabel('Predicted')\n",
        "plt.ylabel('Actual')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "MvojPGsSEzvF",
        "outputId": "52a84380-a31a-4dbc-f0b7-9947f1f11883"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First 5 rows of the dataset:\n",
            "   PassengerId  Survived  Pclass  \\\n",
            "0            1         0       3   \n",
            "1            2         1       1   \n",
            "2            3         1       3   \n",
            "3            4         1       1   \n",
            "4            5         0       3   \n",
            "\n",
            "                                                Name     Sex   Age  SibSp  \\\n",
            "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
            "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
            "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
            "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
            "4                           Allen, Mr. William Henry    male  35.0      0   \n",
            "\n",
            "   Parch            Ticket     Fare Cabin Embarked  \n",
            "0      0         A/5 21171   7.2500   NaN        S  \n",
            "1      0          PC 17599  71.2833   C85        C  \n",
            "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
            "3      0            113803  53.1000  C123        S  \n",
            "4      0            373450   8.0500   NaN        S  \n",
            "\n",
            "Dataset Information:\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 891 entries, 0 to 890\n",
            "Data columns (total 12 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   PassengerId  891 non-null    int64  \n",
            " 1   Survived     891 non-null    int64  \n",
            " 2   Pclass       891 non-null    int64  \n",
            " 3   Name         891 non-null    object \n",
            " 4   Sex          891 non-null    object \n",
            " 5   Age          714 non-null    float64\n",
            " 6   SibSp        891 non-null    int64  \n",
            " 7   Parch        891 non-null    int64  \n",
            " 8   Ticket       891 non-null    object \n",
            " 9   Fare         891 non-null    float64\n",
            " 10  Cabin        204 non-null    object \n",
            " 11  Embarked     889 non-null    object \n",
            "dtypes: float64(2), int64(5), object(5)\n",
            "memory usage: 83.7+ KB\n",
            "None\n",
            "\n",
            "Missing values in each column:\n",
            "PassengerId      0\n",
            "Survived         0\n",
            "Pclass           0\n",
            "Name             0\n",
            "Sex              0\n",
            "Age            177\n",
            "SibSp            0\n",
            "Parch            0\n",
            "Ticket           0\n",
            "Fare             0\n",
            "Cabin          687\n",
            "Embarked         2\n",
            "dtype: int64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "could not convert string to float: 'Braund, Mr. Owen Harris'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-7-9099e886b5a8>\u001b[0m in \u001b[0;36m<cell line: 49>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     47\u001b[0m \u001b[0;31m# Correlation heatmap\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 49\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheatmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mannot\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'coolwarm'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfmt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'.2f'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Correlation Heatmap'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mcorr\u001b[0;34m(self, method, min_periods, numeric_only)\u001b[0m\n\u001b[1;32m  11047\u001b[0m         \u001b[0mcols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  11048\u001b[0m         \u001b[0midx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcols\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m> 11049\u001b[0;31m         \u001b[0mmat\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m  11050\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  11051\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmethod\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"pearson\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mto_numpy\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1991\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1992\u001b[0m             \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1993\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1994\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1995\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mas_array\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1692\u001b[0m                 \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwriteable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1693\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1694\u001b[0;31m             \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_interleave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1695\u001b[0m             \u001b[0;31m# The underlying data was copied within _interleave, so no need\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1696\u001b[0m             \u001b[0;31m# to further copy if copy=True or setting na_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_interleave\u001b[0;34m(self, dtype, na_value)\u001b[0m\n\u001b[1;32m   1751\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1752\u001b[0m                 \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mblk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1753\u001b[0;31m             \u001b[0mresult\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1754\u001b[0m             \u001b[0mitemmask\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1755\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'Braund, Mr. Owen Harris'"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler, LabelEncoder\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
        "\n",
        "# Load the Titanic dataset from Google Drive\n",
        "data_path = \"/content/drive/MyDrive/Titanic-Dataset.csv\"  # Adjust the path if needed\n",
        "df = pd.read_csv(data_path)\n",
        "\n",
        "# Display the first few rows of the dataset\n",
        "print(\"First 5 rows of the dataset:\")\n",
        "print(df.head())\n",
        "\n",
        "# Display information about the dataset\n",
        "print(\"\\nDataset Information:\")\n",
        "print(df.info())\n",
        "\n",
        "# Check for missing values\n",
        "print(\"\\nMissing values in each column:\")\n",
        "print(df.isnull().sum())\n",
        "\n",
        "# Exploratory Data Analysis (EDA)\n",
        "# Distribution of target variable 'Survived'\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.countplot(data=df, x='Survived')\n",
        "plt.title('Survival Count')\n",
        "plt.show()\n",
        "\n",
        "# Gender distribution in survival\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.countplot(data=df, x='Survived', hue='Sex')\n",
        "plt.title('Survival Count by Gender')\n",
        "plt.show()\n",
        "\n",
        "# Age distribution\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.histplot(data=df, x='Age', bins=30, kde=True)\n",
        "plt.title('Age Distribution')\n",
        "plt.show()\n",
        "\n",
        "# Convert non-numeric columns to numeric values or drop them for analysis\n",
        "# Dropping 'Name', 'Ticket', and 'Cabin' columns as they don't contribute to the model\n",
        "df.drop(columns=['Name', 'Ticket', 'Cabin'], inplace=True)\n",
        "\n",
        "# Fill missing values\n",
        "df['Age'].fillna(df['Age'].median(), inplace=True)\n",
        "df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)\n",
        "\n",
        "# Encode categorical variables\n",
        "df['Sex'] = LabelEncoder().fit_transform(df['Sex'])\n",
        "df['Embarked'] = LabelEncoder().fit_transform(df['Embarked'])\n",
        "\n",
        "# Correlation heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt='.2f')\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()\n",
        "\n",
        "# Define features and target variable\n",
        "X = df.drop('Survived', axis=1)\n",
        "y = df['Survived']\n",
        "\n",
        "# Split the dataset into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Feature Scaling\n",
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n",
        "\n",
        "# Build and train a Random Forest Classifier\n",
        "model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions and evaluate the model\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Evaluation metrics\n",
        "print(\"\\nModel Accuracy:\", accuracy_score(y_test, y_pred))\n",
        "print(\"\\nClassification Report:\")\n",
        "print(classification_report(y_test, y_pred))\n",
        "\n",
        "# Confusion matrix\n",
        "plt.figure(figsize=(6, 4))\n",
        "sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues', cbar=False)\n",
        "plt.title('Confusion Matrix')\n",
        "plt.xlabel('Predicted')\n",
        "plt.ylabel('Actual')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "iMCdeaOQFjH-",
        "outputId": "67044318-589e-4128-ad9a-8149b61ed502"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First 5 rows of the dataset:\n",
            "   PassengerId  Survived  Pclass  \\\n",
            "0            1         0       3   \n",
            "1            2         1       1   \n",
            "2            3         1       3   \n",
            "3            4         1       1   \n",
            "4            5         0       3   \n",
            "\n",
            "                                                Name     Sex   Age  SibSp  \\\n",
            "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
            "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
            "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
            "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
            "4                           Allen, Mr. William Henry    male  35.0      0   \n",
            "\n",
            "   Parch            Ticket     Fare Cabin Embarked  \n",
            "0      0         A/5 21171   7.2500   NaN        S  \n",
            "1      0          PC 17599  71.2833   C85        C  \n",
            "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
            "3      0            113803  53.1000  C123        S  \n",
            "4      0            373450   8.0500   NaN        S  \n",
            "\n",
            "Dataset Information:\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 891 entries, 0 to 890\n",
            "Data columns (total 12 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   PassengerId  891 non-null    int64  \n",
            " 1   Survived     891 non-null    int64  \n",
            " 2   Pclass       891 non-null    int64  \n",
            " 3   Name         891 non-null    object \n",
            " 4   Sex          891 non-null    object \n",
            " 5   Age          714 non-null    float64\n",
            " 6   SibSp        891 non-null    int64  \n",
            " 7   Parch        891 non-null    int64  \n",
            " 8   Ticket       891 non-null    object \n",
            " 9   Fare         891 non-null    float64\n",
            " 10  Cabin        204 non-null    object \n",
            " 11  Embarked     889 non-null    object \n",
            "dtypes: float64(2), int64(5), object(5)\n",
            "memory usage: 83.7+ KB\n",
            "None\n",
            "\n",
            "Missing values in each column:\n",
            "PassengerId      0\n",
            "Survived         0\n",
            "Pclass           0\n",
            "Name             0\n",
            "Sex              0\n",
            "Age            177\n",
            "SibSp            0\n",
            "Parch            0\n",
            "Ticket           0\n",
            "Fare             0\n",
            "Cabin          687\n",
            "Embarked         2\n",
            "dtype: int64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAq4AAAHWCAYAAAC2Zgs3AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABsOElEQVR4nO3dd3hUZcL+8e9MkknvvQ01EKp0jNhQFBVdC9YVxboWrLiusq66+q7Luvuz7S7K6ougrwVFkdW1LVJiAQRCUSD0QEJJI2VSJ2XO74/I7EZAIZnkzCT357rmgpxz5sw9xzG5OXnOcyyGYRiIiIiIiHg5q9kBRERERESOh4qriIiIiPgEFVcRERER8QkqriIiIiLiE1RcRURERMQnqLiKiIiIiE9QcRURERERn6DiKiIiIiI+QcVVRERERHyCiquIiAn27NmDxWJh3rx5Hf5a8+bNw2KxsGfPHveynj17cuGFF3b4awMsX74ci8XC8uXLO+X1RKTrUnEVEZ/14osvYrFYGDt2rNlRsFgs7oe/vz8xMTGMHDmSe++9ly1btnjsdV588cVOKbtt4c3ZRKRrsBiGYZgdQkSkLcaNG8eBAwfYs2cPO3bsoG/fvqZlsVgsnHPOOVx//fUYhkFlZSUbN25kwYIF1NTU8PTTTzN9+nT39oZh4HQ6CQgIwM/P77hfZ/DgwcTFxZ3Q2cvm5mYaGxsJDAzEYrEALWdcBw8ezL/+9a/j3k9bs7lcLhoaGrDZbFitOl8iIm2n7yAi4pPy8vJYsWIFzz77LPHx8bz55ptmR6Jfv35MmTKF6667jrvuuotXXnmFXbt2MXr0aB544AE++eQT97YWi4WgoKATKq0nqqamBgA/Pz+CgoLcpbWzWa1WgoKCVFpFpN30XUREfNKbb75JdHQ0kyZN4vLLLz9mcT106BDXXXcdERERREVFMXXqVDZu3HjU8aVbt27l8ssvJyYmhqCgIEaNGsWHH37YrpyxsbHMnz8ff39/nnrqKffyo41xLSws5MYbbyQtLY3AwECSk5O5+OKL3WNTe/bsyebNm8nOznYPSzjzzDOB/4xjzc7O5s477yQhIYG0tLRW6/57jOth//73vxk2bBhBQUEMHDiQhQsXtlr/+9///qiF98f7/KlsxxrjumDBAkaOHElwcDBxcXFMmTKF/fv3t9rmhhtuICwsjP3793PJJZcQFhZGfHw8v/71r2lubv6Zoy8iXY2/2QFERNrizTff5LLLLsNms3HNNdfw0ksvsWbNGkaPHu3exuVycdFFF7F69WruuOMOMjMz+ec//8nUqVOP2N/mzZsZN24cqampPPzww4SGhvLuu+9yySWX8P7773PppZe2OavdbueMM85g2bJlOBwOIiIijrrd5MmT2bx5M3fffTc9e/akuLiYxYsXk5+fT8+ePXn++ee5++67CQsL45FHHgEgMTGx1T7uvPNO4uPjeeyxx9xnXI9lx44dXHXVVdx+++1MnTqVuXPncsUVV/DZZ59xzjnnnNB7PJ5s/23evHnceOONjB49mpkzZ1JUVMQLL7zAN998w/r164mKinJv29zczMSJExk7diz/7//9P7744gueeeYZ+vTpwx133HFCOUXExxkiIj5m7dq1BmAsXrzYMAzDcLlcRlpamnHvvfe22u799983AOP55593L2tubjbOOussAzDmzp3rXn722WcbQ4YMMerr693LXC6XccoppxgZGRk/mwkwpk2bdsz19957rwEYGzduNAzDMPLy8lplKC8vNwDjL3/5y0++zqBBg4wzzjjjiOVz5841AOPUU081mpqajrouLy/PvaxHjx4GYLz//vvuZZWVlUZycrIxfPhw97LHH3/cONqPiqPt81jZli1bZgDGsmXLDMMwjIaGBiMhIcEYPHiwUVdX597uX//6lwEYjz32mHvZ1KlTDcB48sknW+1z+PDhxsiRI494LRHp2jRUQER8zptvvkliYiLjx48HWsaLXnXVVcyfP7/Vr48/++wzAgICuPXWW93LrFYr06ZNa7W/srIyli5dypVXXklVVRWlpaWUlpZy6NAhJk6cyI4dO474FfaJCgsLA6Cqquqo64ODg7HZbCxfvpzy8vI2v86tt9563ONmU1JSWp1JjoiI4Prrr2f9+vUUFha2OcPPWbt2LcXFxdx5550EBQW5l0+aNInMzEw+/vjjI55z++23t/r6tNNOY/fu3R2WUUS8k4qriPiU5uZm5s+fz/jx48nLy2Pnzp3s3LmTsWPHUlRUxJIlS9zb7t27l+TkZEJCQlrt48ezD+zcuRPDMHj00UeJj49v9Xj88ccBKC4ublfu6upqAMLDw4+6PjAwkKeffppPP/2UxMRETj/9dP785z+fcIHs1avXcW/bt2/fI8av9uvXD+Co42E9Ze/evQD079//iHWZmZnu9YcFBQURHx/fall0dHS7Cr6I+CaNcRURn7J06VIOHjzI/PnzmT9//hHr33zzTc4999wT2qfL5QLg17/+NRMnTjzqNu2damvTpk34+fn9ZLG87777uOiii1i0aBGff/45jz76KDNnzmTp0qUMHz78uF4nODi4XTl/7FgzEXTmhVEdOfOCiPgWFVcR8SlvvvkmCQkJzJo164h1Cxcu5IMPPmD27NkEBwfTo0cPli1bRm1tbauzrjt37mz1vN69ewMQEBDAhAkTPJ45Pz+f7OxssrKyjnnG9bA+ffrwwAMP8MADD7Bjxw6GDRvGM888wxtvvAEcu0i2xeEzzf+9z+3btwMtswRAy5lNgIqKilYXTP34rOiJZOvRowcA27Zt46yzzmq1btu2be71IiI/pqECIuIz6urqWLhwIRdeeCGXX375EY+77rqLqqoq9xRWEydOpLGxkVdeecW9D5fLdUTpTUhI4Mwzz+Qf//gHBw8ePOJ1S0pK2py5rKyMa665hubmZvfV9kdTW1tLfX19q2V9+vQhPDwcp9PpXhYaGkpFRUWb8/y3AwcO8MEHH7i/djgcvP766wwbNoykpCR3BoAvv/zSvV1NTQ2vvfbaEfs73myjRo0iISGB2bNnt3pvn376Kbm5uUyaNKmtb0lEujidcRURn/Hhhx9SVVXFL37xi6OuP/nkk903I7jqqqu45JJLGDNmDA888AA7d+4kMzOTDz/8kLKyMqD1GcJZs2Zx6qmnMmTIEG699VZ69+5NUVERK1euZN++fWzcuPFn823fvp033ngDwzBwOBzuO2dVV1fz7LPPct555/3kc88++2yuvPJKBg4ciL+/Px988AFFRUVcffXV7u1GjhzJSy+9xB/+8Af69u1LQkLCEWctj1e/fv24+eabWbNmDYmJibz66qsUFRUxd+5c9zbnnnsudrudm2++mQcffBA/Pz9effVV4uPjyc/Pb7W/480WEBDA008/zY033sgZZ5zBNddc454Oq2fPntx///1tej8i0g2YPKuBiMhxu+iii4ygoCCjpqbmmNvccMMNRkBAgFFaWmoYhmGUlJQYv/zlL43w8HAjMjLSuOGGG4xvvvnGAIz58+e3eu6uXbuM66+/3khKSjICAgKM1NRU48ILLzTee++9n80GuB9Wq9WIiooyhg8f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7m287XOj4tpOY8aMMaZNm+b+urm52UhJSTFmzpxpYipz/bi4ulwuIykpyfjLX/7iXlZRUWEEBgYab7/9tgkJzVNcXGwARnZ2tmEYLcchICDAWLBggXub3NxcAzBWrlxpVkzTREdHG//7v/+r42IYRlVVlZGRkWEsXrzYOOOMM9zFtbsfm8cff9w46aSTjrquOx+bhx56yDj11FOPuV7fh//j3nvvNfr06WO4XK5u/ZkxDMOYNGmScdNNN7VadtlllxnXXnutYRje+bnRUIF2aGhoICcnhwkTJriXWa1WJkyYwMqVK01M5l3y8vIoLCxsdZwiIyMZO3ZstztOlZWVAMTExACQk5NDY2Njq2OTmZmJ3W7vVsemubmZ+fPnU1NTQ1ZWlo4LMG3aNCZNmtTqGIA+MwA7duwgJSWF3r17c+2115Kfnw9072Pz4YcfMmrUKK644goSEhIYPnw4r7zyinu9vg+3aGho4I033uCmm27CYrF0688MwCmnnMKSJUvYvn07ABs3buTrr7/m/PPPB7zzc+P1d87yZqWlpTQ3Nx9xF6/ExES2bt1qUirvU1hYCHDU43R4XXfgcrm47777GDduHIMHDwZajo3NZiMqKqrVtt3l2Hz//fdkZWVRX19PWFgYH3zwAQMHDmTDhg3d+rjMnz+fdevWsWbNmiPWdffPzNixY5k3bx79+/fn4MGDPPHEE5x22mls2rSpWx+b3bt389JLLzF9+nR++9vfsmbNGu655x5sNhtTp07V9+EfLFq0iIqKCm644QZA/z89/PDDOBwOMjMz8fPzo7m5maeeeoprr70W8M6f3yquIp1k2rRpbNq0ia+//trsKF6jf//+bNiwgcrKSt577z2mTp1Kdna22bFMVVBQwL333svixYsJCgoyO47XOXwmCGDo0KGMHTuWHj168O677xIcHGxiMnO5XC5GjRrFH//4RwCGDx/Opk2bmD17NlOnTjU5nfeYM2cO559/PikpKWZH8Qrvvvsub775Jm+99RaDBg1iw4YN3HfffaSkpHjt50ZDBdohLi4OPz+/I64+LCoqIikpyaRU3ufwsejOx+muu+7iX//6F8uWLSMtLc29PCkpiYaGBioqKlpt312Ojc1mo2/fvowcOZKZM2dy0kkn8cILL3Tr45KTk0NxcTEjRozA398ff39/srOz+etf/4q/vz+JiYnd9tgcTVRUFP369WPnzp3d+nOTnJzMwIEDWy0bMGCAexiFvg/D3r17+eKLL7jlllvcy7rzZwbgwQcf5OGHH+bqq69myJAhXHfdddx///3MnDkT8M7PjYprO9hsNkaOHMmSJUvcy1wuF0uWLCErK8vEZN6lV69eJCUltTpODoeDb7/9tssfJ8MwuOuuu/jggw9YunQpvXr1arV+5MiRBAQEtDo227ZtIz8/v8sfm6NxuVw4nc5ufVzOPvtsvv/+ezZs2OB+jBo1imuvvdb99+56bI6murqaXbt2kZyc3K0/N+PGjTtiqr3t27fTo0cPoHt/Hz5s7ty5JCQkMGnSJPey7vyZAaitrcVqbV0F/fz8cLlcgJd+bky5JKwLmT9/vhEYGGjMmzfP2LJli/GrX/3KiIqKMgoLC82O1qmqqqqM9evXG+vXrzcA49lnnzXWr19v7N271zCMluk0oqKijH/+85/Gd999Z1x88cXdYhqWO+64w4iMjDSWL1/eajqW2tpa9za33367YbfbjaVLlxpr1641srKyjKysLBNTd46HH37YyM7ONvLy8ozvvvvOePjhhw2LxWL8+9//Ngyj+x6Xo/nvWQUMo3sfmwceeMBYvny5kZeXZ3zzzTfGhAkTjLi4OKO4uNgwjO57bFavXm34+/sbTz31lLFjxw7jzTffNEJCQow33njDvU13/T5sGC0z/tjtduOhhx46Yl13/cwYhmFMnTrVSE1NdU+HtXDhQiMuLs74zW9+497G2z43Kq4e8Le//c2w2+2GzWYzxowZY6xatcrsSJ1u2bJlBnDEY+rUqYZhtEyp8eijjxqJiYlGYGCgcfbZZxvbtm0zN3QnONoxAYy5c+e6t6mrqzPuvPNOIzo62ggJCTEuvfRS4+DBg+aF7iQ33XST0aNHD8Nmsxnx8fHG2Wef7S6thtF9j8vR/Li4dudjc9VVVxnJycmGzWYzUlNTjauuuqrVXKXd+dh89NFHxuDBg43AwEAjMzPTePnll1ut767fhw3DMD7//HMDOOr77c6fGYfDYdx7772G3W43goKCjN69exuPPPKI4XQ63dt42+fGYhj/dXsEEREREREvpTGuIiIiIuITVFxFRERExCeouIqIiIiIT1BxFRERERGfoOIqIiIiIj5BxVVEREREfIKKq4iIiIj4BBVXEREREfEJKq4iIiIi4hNUXEVEvMjKlSvx8/Nj0qRJZkcREfE6uuWriIgXueWWWwgLC2POnDls27aNlJQUsyOJiHgNnXEVEfES1dXVvPPOO9xxxx1MmjSJefPmtVr/4YcfkpGRQVBQEOPHj+e1117DYrFQUVHh3ubrr7/mtNNOIzg4mPT0dO655x5qamo6942IiHQQFVcRES/x7rvvkpmZSf/+/ZkyZQqvvvoqh38plpeXx+WXX84ll1zCxo0bue2223jkkUdaPX/Xrl2cd955TJ48me+++4533nmHr7/+mrvuusuMtyMi4nEaKiAi4iXGjRvHlVdeyb333ktTUxPJycksWLCAM888k4cffpiPP/6Y77//3r397373O5566inKy8uJiorilltuwc/Pj3/84x/ubb7++mvOOOMMampqCAoKMuNtiYh4jM64ioh4gW3btrF69WquueYaAPz9/bnqqquYM2eOe/3o0aNbPWfMmDGtvt64cSPz5s0jLCzM/Zg4cSIul4u8vLzOeSMiIh3I3+wAIiICc+bMoampqdXFWIZhEBgYyN///vfj2kd1dTW33XYb99xzzxHr7Ha7x7KKiJhFxVVExGRNTU28/vrrPPPMM5x77rmt1l1yySW8/fbb9O/fn08++aTVujVr1rT6esSIEWzZsoW+fft2eGYRETNojKuIiMkWLVrEVVddRXFxMZGRka3WPfTQQyxdupR3332X/v37c//993PzzTezYcMGHnjgAfbt20dFRQWRkZF89913nHzyydx0003ccssthIaGsmXLFhYvXnzcZ21FRLyZxriKiJhszpw5TJgw4YjSCjB58mTWrl1LVVUV7733HgsXLmTo0KG89NJL7lkFAgMDARg6dCjZ2dls376d0047jeHDh/PYY49pLlgR6TJ0xlVExEc99dRTzJ49m4KCArOjiIh0Co1xFRHxES+++CKjR48mNjaWb775hr/85S+ao1VEuhUVVxERH7Fjxw7+8Ic/UFZWht1u54EHHmDGjBlmxxIR6TQaKiAiIiIiPkEXZ4mIiIiIT1BxFRERERGfoOIqIiIiIj5BxVVEREREfIKKq4iIiIj4BBVXEREREfEJKq4iIiIi4hNUXEVERETEJ/x/6S7Te74evfIAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-8-18414b2ce8c5>:51: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['Age'].fillna(df['Age'].median(), inplace=True)\n",
            "<ipython-input-8-18414b2ce8c5>:52: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "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T9qg//+Kv2calY8vvvgCSUlJGD9+PBISEhAaGopDhw4pJoyIiYlR+gyUB4Fc/qHckvPjdPSm5mYlysOv4y+XdxU0zuw/VN9V/WOWEPzh3eemtFnc5AQlr7oda1Jy0Ecm9hmPOa8yN1d9b7qPWcOKGjTzhoaoFWBR3lVQKfPKgXJ7bbMarcvttUsLM05ERERERNqoHCeH0EZ8N4mIiIiIiErAjBMRERERkRaSf0CTQ3wImHEiIiIiIiIqATtOREREREREJeBQPSIiIiIibcTJIdSK7yYREREREVEJmHEiIiIiItJCcnByCHVixomIiIiIiKgEzDgREREREWkhOa9xUiu+m0RERERERCVgx4mIiIiIiKgEHKpHRERERKSNOFRPrfhuEhERERERlYAZJyIiIiIiLSQXcDpydWLGiYiIiIiIqATsOBEREREREZWAQ/WIiIiIiLQQ7+OkXnw3iYiIiIiISsCMExERERGRNuLkEGrFjBMREREREVEJmHEiIiIiItJCvMZJvfhuEhERERERlYAdJyIiIiIiohJwqB4RERERkRaSg5NDqBMzTkRERERERCVgxomIiIiISAtxcgj14rtJRERERERUAmacNBzHpiob8EO98q6Cxlm8LbW8q6Bxet78u7yroHEyQqqWdxU0TvyyW+VdBY1jZalX3lXQOHUCs8u7ChonXmRW3lUgKhfsOBERERERaSMBT8CrE4fqERERERERlYAZJyIiIiIiLSRnjkSt+G4SERERERGVgB0nIiIiIiKiEnCoHhERERGRFpJzcgi1YsaJiIiIiIioBMw4ERERERFpIbmAORJ14rtJRERERERUAmaciIiIiIi0kBy8xkmdmHEiIiIiIiIqATtOREREREREJeBQPSIiIiIiLcTJIdSL7yYREREREVEJmHEiIiIiItJCvAGuejHjREREREREVAJ2nIiIiIiIiErAoXpERERERFqI93FSL2aciIiIiIiISsCMExERERGRFuJ05OrFd5OIiIiIiKgEzDgREREREWkhXuOkXsw4ERERERERlYAdJyIiIiIiohJwqB4RERERkRbi5BDqxXeTiIiIiIioBMw4ERERERFpIU4OoV7MOBEREREREZWAGadiXLhwAfXq1UPLli2xf//+8q6O2p0+tBHH966CKD0ZLu7++KzPaHj4VCo2/vqFw9i3eT5Sk+Jh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DZ/vvRwkZJqUdxU0zqc1NWzM7D8eRD8tt9f29XYvt9cuLdxDvoOFCxeiRo0asLGxwblz5/DHH39oxD2aiIiIiIiodGhm91jDPXjwAB06dEBQUBB+++03jBgxAhMnTizvahERERERfbAWLFgADw8PGBoaIiwsDJcvXy42dunSpahfvz6srKxgZWWFpk2bvjFeHdhxegezZs1CfHw88vLycP/+fYwbNw66ukzeEREREZHmkENQbst/tXnzZgwfPhwTJkzA33//jZCQELRo0QKJiYkq40+ePImvvvoKf/31Fy5cuABXV1c0b94cz549e9+3rVjsOBERERERkVqJxWKIRCKlRSwWFxs/c+ZM9O/fH71790ZQUBAWL14MY2NjrFixQmX8+vXrMWjQIISGhiIgIADLli2DTCbD8ePHS6tJ7DgREREREWmj8sw4hYeHw8LCQmkJDw9XWc/8/Hxcu3YNTZsWTT0vFArRtGlTXLhwQWWZV+Xk5EAikcDa2lot750qHF9GRERERERqNXr0aAwfrnxfwn9v3fOq5ORkFBQUwMHBQWm9g4MDoqKi3ur1Ro0aBWdnZ6XOl7qx40REREREpIXe5VojdTEwMCi2o6RuU6ZMwaZNm3Dy5EkYGpbeLUnYcSIiIiIionJja2sLHR0dvHjxQmn9ixcv4Ojo+May06dPx5QpU3Ds2DFUrly5NKvJa5yIiIiIiKj86Ovro1q1akoTO/w70UPt2rWLLTdt2jT89ttvOHToEKpXr17q9WTGiYiIiIhIC5XnUL3/avjw4ejZsyeqV6+OmjVrYvbs2cjOzkbv3r0BAD169ICLi4tigompU6di/Pjx2LBhAzw8PJCQkAAAMDU1hampaanUkR0nIiIiIiIqV1988QWSkpIwfvx4JCQkIDQ0FIcOHVJMGBETEwOhsGiw3KJFi5Cfn4/PPvtMaTsTJkzAxIkTS6WO7DgREREREWkhufzDyTgBwODBgzF48GCVz508eVLp8ZMnT0q/Qq/gNU5EREREREQlYMeJiIiIiIioBByqR0RERESkhT6kySE+BMw4ERERERERlYAZJyIiIiIiLcSMk3ox40RERERERFQCZpyIiIiIiLQQM07qxYwTERERERFRCdhxIiIiIiIiKgGH6hERERERaSG5nEP11IkZJyIiIiIiohIw40REREREpIVknBxCrZhxIiIi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9O3bF9evX0fHjh3RsWNH3L59+z3fteKx40REREREROVq5syZ6N+/P3r37o2goCAsXrwYxsbGWLFihcr4OXPmoGXLlhg5ciQCAwPx22+/oWrVqpg/f36p1ZEdJyIiIiIiLSSXC8ptEYvFEIlESotYLFZZz/z8fFy7dg1NmzZVrBMKhWjatCkuXLigssyFCxeU4gGgRYsWxcarAztORERERESkVuHh4bCwsFBawsPDVcYmJyejoKAADg4OSusdHByQkJCgskxCQsJ/ilcHzqpHRERERERqNXr0aAwfPlxpnYGBQTnVRj3YcSIiIiIi0kKyd5ikQV0MDAzeuqNka2sLHR0dvHjxQmn9ixcv4OjoqLKMo6Pjf4pXBw7VIyIiIiKicqOvr49q1arh+PHjinUymQzHjx9H7dq1VZapXbu2UjwAHD16tNh4dWDGiYiIiIhIC73LtODlZfjw4ejZsyeqV6+OmjVrYvbs2cjOzkbv3r0BAD169ICLi4viOqn//e9/aNiwIWbMmIE2bdpg06ZNuHr1KpYsWVJqdWTHiYiIiIiIytUXX3yBpKQkjB8/HgkJCQgNDcWhQ4cUE0DExMRAKCwaLFenTh1s2LABP//8M8aMGQNfX1/s2rULFStWLLU6CuTyD6kv+vHZcJZ/npfp6vD9eJWzRW55V0Hj3I41Ke8qaJz4hPzyroLGCetXqbyroHEanVI949XH7JF93fKugsZJFZuVdxU0TsNg4/Kugko7LxeU22t3qqlTbq9dWphxIiIiIiLSQnIIyrsKWoWTQxAREREREZWAGSciIiIiIi1UntORayNmnIiIiIiIiErAjBMRERERkRbiFHDqxYwTERERERFRCZhx0nCmhrLyroJGsTbOK+8qaBxRnn55V0HjxD4Tl3cVNI6VpV55V0HjcOrt151sOLq8q6Bx/KMOlXcVNE6+1LK8q0BULthxIiIiIiLSQhyqp14cqkdERERERFQCZpyIiIiIiLSQTM4b4KoTM05EREREREQlYMeJiIiIiIioBByqR0RERESkhTg5hHox40RERERERFQCZpyIiIiIiLQQM07qxYwTERERERFRCZhxIiIiIiLSQjJmnNSKGSciIiIiIqISsONERERERERUAg7VIyIiIiLSQnK5oLyroFWYcSIiIiIiIioBM05ERERERFqI05GrFzNOREREREREJWDH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fshPVH3PH03ToGFDZIgysG7tWqSlpcHLywu//joJVlaFQ/WSkhIhEBZ9Tg7s3wepVILff5+ktJ2uXbuhW/evkZKSjEsXCzO/QwYPUooJnzIVlStr7snLf1Wr0xJZojTs37IQmenJcPHwx3djFikmY0pNVj4We/mHotfQKdi3aR72bpwLOyc3fDNyDpzdfMurCfQREMjlHP2oyfZc1fwfTmXJ2jivvKugcUR5r18c/LE7d0NL77z3HqwsNf+Mc1kb6LirvKugcU42HF3eVdA4/lEfx7Uw/8XjLOeSgz4yzUI0c/Ka+QfK72f+4NbaNynHR3ONExERERER0btix4mIiIiIiKgEH/U1TkRERERE2ooX5KgXM05EREREREQlYMaJiIiIiEgLyThXklox40RERERERFQCdpyIiIiIiIhKwKF6RERERERaiJNDqBczTkRERERERCVgxomIiIiISAvJmHFSK2aciIiIiIiISsCMExERERGRFuI1TurFjBMREREREVEJ2HEiIiIiIiIqAYfqERERERFpIXm5zg4hKMfXLh3MOBEREREREZWAGSciIiIiIi3E6cjVixknIiIiIiKiErDjREREREREVAIO1SMiIiIi0kK8j5N6MeNERERERERUAmaciIiIiIi0kIyzQ6gVM05EREREREQlYMeJiIiIiEgLyeXlt5SW1NRUdOvWDebm5rC0tETfvn2RlZX1xvghQ4bA398fRkZGcHNzw9ChQ5GRkfGfX5sdJyIiIiIi+iB069YNd+7cwdGjR7Fv3z6cPn0a33zzTbHx8fHxiI+Px/Tp03H79m2sWrUKhw4dQt++ff/za/MaJyIiIiIiUiuxWAyxWKy0zsDAAAYGBu+8zcjISBw6dAhXrlxB9erVAQDz5s1D69atMX36dDg7O79WpmLFiti+fbvisbe3NyZPnozu3btDKpVCV/ftu0PMOBERERERaaHyHKoXHh4OCwsLpSU8PPy92nPhwgVYWloqOk0A0LRpUwiFQly6dOmtt5ORkQFzc/P/1GkCmHEiIiIiIiI1Gz16NIYPH6607n2yTQCQkJAAe3t7pXW6urqwtrZGQkLCW20jOTkZv/322xuH9xWHGSciIiIiIi0kk8vLbTEwMIC5ubnSUlzH6aeffoJAIHjjEhUV9d7vh0gkQps2bRAUFISJEyf+5/LMOGk4oZDz77/M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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Model Accuracy: 0.8268156424581006\n",
            "\n",
            "Classification Report:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.83      0.89      0.86       105\n",
            "           1       0.82      0.74      0.78        74\n",
            "\n",
            "    accuracy                           0.83       179\n",
            "   macro avg       0.83      0.81      0.82       179\n",
            "weighted avg       0.83      0.83      0.83       179\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}